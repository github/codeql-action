# Warning: This file is generated automatically, and should not be modified.
# Instead, please modify the template in the pr-checks directory and run:
#     (cd pr-checks; pip install ruamel.yaml@0.17.31 && python3 sync.py)
# to regenerate this file.

name: PR Check - Multi-language repository
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: auto
  CODEQL_EXTRACTOR_JAVA_AGENT_DISABLE_KOTLIN: 'true'
on:
  push:
    branches:
      - main
      - releases/v*
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch: {}
jobs:
  multi-language-autodetect:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            version: stable-20230403
          - os: macos-12
            version: stable-v2.13.5
          - os: macos-12
            version: stable-v2.14.6
          - os: macos-latest
            version: stable-v2.15.5
          - os: macos-latest
            version: stable-v2.16.6
          - os: macos-latest
            version: default
          - os: macos-latest
            version: latest
          - os: macos-latest
            version: nightly-latest
    name: Multi-language repository
    permissions:
      contents: read
      security-events: write
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Python on MacOS
        uses: actions/setup-python@v5
        if: >-
          runner.os == 'macOS' && (

          matrix.version == 'stable-20230403' ||

          matrix.version == 'stable-v2.13.5' ||

          matrix.version == 'stable-v2.14.6')
        with:
          python-version: '3.11'
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Prepare test
        id: prepare-test
        uses: ./.github/actions/prepare-test
        with:
          version: ${{ matrix.version }}
          use-all-platform-bundle: 'false'
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.21.0'

      - uses: ./../action/init
        id: init
        with:
          db-location: ${{ runner.temp }}/customDbLocation
          tools: ${{ steps.prepare-test.outputs.tools-url }}

      - uses: ./../action/.github/actions/setup-swift
        with:
          codeql-path: ${{ steps.init.outputs.codeql-path }}

      - name: Build code
        shell: bash
        run: ./build.sh

      - uses: ./../action/analyze
        id: analysis
        with:
          upload-database: false

      - name: Check language autodetect for all languages excluding Swift
        shell: bash
        run: |
          CPP_DB=${{ fromJson(steps.analysis.outputs.db-locations).cpp }}
          if [[ ! -d $CPP_DB ]] || [[ ! $CPP_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for CPP, or created it in the wrong location."
            exit 1
          fi
          CSHARP_DB=${{ fromJson(steps.analysis.outputs.db-locations).csharp }}
          if [[ ! -d $CSHARP_DB ]] || [[ ! $CSHARP_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for C Sharp, or created it in the wrong location."
            exit 1
          fi
          GO_DB=${{ fromJson(steps.analysis.outputs.db-locations).go }}
          if [[ ! -d $GO_DB ]] || [[ ! $GO_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Go, or created it in the wrong location."
            exit 1
          fi
          JAVA_DB=${{ fromJson(steps.analysis.outputs.db-locations).java }}
          if [[ ! -d $JAVA_DB ]] || [[ ! $JAVA_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Java, or created it in the wrong location."
            exit 1
          fi
          JAVASCRIPT_DB=${{ fromJson(steps.analysis.outputs.db-locations).javascript }}
          if [[ ! -d $JAVASCRIPT_DB ]] || [[ ! $JAVASCRIPT_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Javascript, or created it in the wrong location."
            exit 1
          fi
          PYTHON_DB=${{ fromJson(steps.analysis.outputs.db-locations).python }}
          if [[ ! -d $PYTHON_DB ]] || [[ ! $PYTHON_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Python, or created it in the wrong location."
            exit 1
          fi
          RUBY_DB=${{ fromJson(steps.analysis.outputs.db-locations).ruby }}
          if [[ ! -d $RUBY_DB ]] || [[ ! $RUBY_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Ruby, or created it in the wrong location."
            exit 1
          fi

      - name: Check language autodetect for Swift
        if: runner.os != 'Windows' && matrix.version != 'stable-20230403'
        shell: bash
        run: |
          SWIFT_DB=${{ fromJson(steps.analysis.outputs.db-locations).swift }}
          if [[ ! -d $SWIFT_DB ]] || [[ ! $SWIFT_DB == ${{ runner.temp }}/customDbLocation/* ]]; then
            echo "Did not create a database for Swift, or created it in the wrong location."
            exit 1
          fi
    env:
      CODEQL_ACTION_TEST_MODE: true
